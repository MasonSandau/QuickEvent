{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to the Event Management System Docs","text":"<p>This documentation provides an overview of the Event Management System, including database models, API endpoints, authentication, and utilities.</p>"},{"location":"index.html#quick-links","title":"Quick Links","text":"<ul> <li>Database Models</li> <li>API Endpoints</li> <li>Authentication</li> <li>Utilities</li> <li>Templates</li> </ul>"},{"location":"api_endpoints/admin_endpoints.html","title":"Admin Endpoints","text":""},{"location":"api_endpoints/admin_endpoints.html#generate-keys","title":"Generate Keys","text":"<ul> <li>Route: <code>/admin/generate_keys</code></li> <li>Method: <code>POST</code></li> <li>Description: Generates registration keys for admin and active users.</li> </ul>"},{"location":"api_endpoints/admin_endpoints.html#view-keys","title":"View Keys","text":"<ul> <li>Route: <code>/admin/view_keys</code></li> <li>Method: <code>GET</code></li> <li>Description: Displays unused registration keys.</li> </ul>"},{"location":"api_endpoints/attendee_endpoints.html","title":"Attendee Endpoints","text":""},{"location":"api_endpoints/attendee_endpoints.html#invite-attendees","title":"Invite Attendees","text":"<ul> <li>Route: <code>/invite_attendees/&lt;event_id&gt;</code></li> <li>Method: <code>POST</code></li> <li>Description: Invites attendees to an event.</li> </ul>"},{"location":"api_endpoints/attendee_endpoints.html#validate-attendee","title":"Validate Attendee","text":"<ul> <li>Route: <code>/validate_attendee/&lt;invite_code&gt;</code></li> <li>Method: <code>GET</code></li> <li>Description: Validates an attendee's QR code.</li> </ul>"},{"location":"api_endpoints/attendee_endpoints.html#attendee-form","title":"Attendee Form","text":"<ul> <li>Route: <code>/attendee_form/&lt;event_id&gt;/&lt;attendee_id&gt;</code></li> <li>Method: <code>POST</code></li> <li>Description: Updates attendee details and generates a QR code.</li> </ul>"},{"location":"api_endpoints/event_endpoints.html","title":"Event Endpoints","text":""},{"location":"api_endpoints/event_endpoints.html#create-event","title":"Create Event","text":"<ul> <li>Route: <code>/create_event</code></li> <li>Method: <code>POST</code></li> <li>Description: Creates a new event.</li> </ul>"},{"location":"api_endpoints/event_endpoints.html#list-events","title":"List Events","text":"<ul> <li>Route: <code>/events</code></li> <li>Method: <code>GET</code></li> <li>Description: Lists all events.</li> </ul>"},{"location":"api_endpoints/event_endpoints.html#event-management","title":"Event Management","text":"<ul> <li>Route: <code>/event_management/&lt;event_id&gt;</code></li> <li>Method: <code>GET</code></li> <li>Description: Displays details and management options for a specific event.</li> </ul>"},{"location":"api_endpoints/user_endpoints.html","title":"User Endpoints","text":""},{"location":"api_endpoints/user_endpoints.html#login","title":"Login","text":"<ul> <li>Route: <code>/login</code></li> <li>Method: <code>POST</code></li> <li>Description: Authenticates a user and creates a session.</li> </ul>"},{"location":"api_endpoints/user_endpoints.html#register","title":"Register","text":"<ul> <li>Route: <code>/register</code></li> <li>Method: <code>POST</code></li> <li>Description: Registers a new user.</li> </ul>"},{"location":"api_endpoints/user_endpoints.html#logout","title":"Logout","text":"<ul> <li>Route: <code>/logout</code></li> <li>Method: <code>GET</code></li> <li>Description: Logs out the current user.</li> </ul>"},{"location":"authentication/login.html","title":"Login","text":"<p>Authenticates a user and creates a session.</p>"},{"location":"authentication/login.html#route","title":"Route","text":"<ul> <li><code>/login</code></li> </ul>"},{"location":"authentication/login.html#methods","title":"Methods","text":"<ul> <li><code>GET</code>: Displays the login form.</li> <li><code>POST</code>: Processes the login form.</li> </ul>"},{"location":"authentication/login.html#example-request","title":"Example Request","text":"<p>```json {   \"username\": \"john_doe\",   \"password\": \"password123\" }</p>"},{"location":"authentication/login.html#example-response","title":"Example Response","text":"<ul> <li>Success: Redirects to /dashboard.</li> <li>Failure: Returns \"Invalid credentials\" with status code 401.</li> </ul>"},{"location":"authentication/logout.html","title":"Logout","text":"<p>Logs out the current user.</p>"},{"location":"authentication/logout.html#route","title":"Route","text":"<ul> <li><code>/logout</code></li> </ul>"},{"location":"authentication/logout.html#methods","title":"Methods","text":"<ul> <li><code>GET</code>: Logs out the user and redirects to <code>/</code>.</li> </ul>"},{"location":"authentication/logout.html#example-response","title":"Example Response","text":"<ul> <li>Success: Redirects to index.</li> </ul>"},{"location":"authentication/register.html","title":"Register","text":"<p>Registers a new user.</p>"},{"location":"authentication/register.html#route","title":"Route","text":"<ul> <li><code>/register</code></li> </ul>"},{"location":"authentication/register.html#methods","title":"Methods","text":"<ul> <li><code>GET</code>: Displays the registration form.</li> <li><code>POST</code>: Processes the registration form.</li> </ul>"},{"location":"authentication/register.html#example-request","title":"Example Request","text":"<p>```json {   \"username\": \"jane_doe\",   \"password\": \"password123\",   \"role\": \"user\",   \"registration_key\": \"hashed_key_123\" }</p>"},{"location":"authentication/register.html#example-response","title":"Example Response","text":"<ul> <li>Success: Redirects to /dashboard.</li> <li>Failure: Returns an error message with status code 400.</li> </ul>"},{"location":"database_models/attendees.html","title":"Attendee Model","text":"<p>Represents an attendee for an event.</p>"},{"location":"database_models/attendees.html#attributes","title":"Attributes","text":"<ul> <li><code>id</code> (str): Primary key, unique identifier for the attendee (UUID as string).</li> <li><code>event_id</code> (str): Foreign key linking the attendee to an event.</li> <li><code>active_name</code> (str): Active name of the attendee (max 150 characters).</li> <li><code>first_name</code> (str): First name of the attendee (max 150 characters).</li> <li><code>last_name</code> (str): Last name of the attendee (max 150 characters).</li> <li><code>invite_code</code> (str): Unique invite code for the attendee (UUID as string).</li> <li><code>qr_code_generated</code> (bool): Indicates whether a QR code has been generated for the attendee.</li> </ul>"},{"location":"database_models/attendees.html#relationships","title":"Relationships","text":"<ul> <li><code>event</code>: Many-to-one relationship with the Event model.</li> </ul>"},{"location":"database_models/attendees.html#example-usage","title":"Example Usage","text":"<p>```python</p>"},{"location":"database_models/attendees.html#create-a-new-attendee","title":"Create a new attendee","text":"<p>new_attendee = Attendee(     id=\"123e4567-e89b-12d3-a456-426614174000\",     event_id=\"550e8400-e29b-41d4-a716-446655440000\",     active_name=\"Tech Enthusiast\",     first_name=\"Jane\",     last_name=\"Doe\",     invite_code=\"550e8400-e29b-41d4-a716-446655440001\",     qr_code_generated=False ) db.session.add(new_attendee) db.session.commit()</p>"},{"location":"database_models/events.html","title":"Event Model","text":"<p>Represents an event in the system.</p>"},{"location":"database_models/events.html#attributes","title":"Attributes","text":"<ul> <li><code>id</code> (str): Primary key, unique identifier for the event (UUID as string).</li> <li><code>name</code> (str): Name of the event (max 150 characters).</li> <li><code>date</code> (str): Date of the event (formatted as a string).</li> <li><code>theme</code> (str): Theme of the event (max 150 characters).</li> <li><code>max_capacity</code> (int): Maximum number of attendees allowed for the event.</li> <li><code>names_per_active</code> (int): Number of names allowed per active attendee.</li> </ul>"},{"location":"database_models/events.html#relationships","title":"Relationships","text":"<ul> <li><code>attendees</code>: One-to-many relationship with the Attendee model.</li> </ul>"},{"location":"database_models/events.html#example-usage","title":"Example Usage","text":"<p>```python</p>"},{"location":"database_models/events.html#create-a-new-event","title":"Create a new event","text":"<p>new_event = Event(     id=\"550e8400-e29b-41d4-a716-446655440000\",     name=\"Tech Conference 2023\",     date=\"2023-12-15\",     theme=\"Innovation in AI\",     max_capacity=500,     names_per_active=2 ) db.session.add(new_event) db.session.commit()</p>"},{"location":"database_models/regkeys.html","title":"Registration Key Model","text":"<p>Represents a registration key in the system.</p>"},{"location":"database_models/regkeys.html#attributes","title":"Attributes","text":"<ul> <li><code>id</code> (int): Primary key, unique identifier for the registration key.</li> <li><code>hashed_key</code> (str): Hashed value of the registration key (max 255 characters).</li> <li><code>role</code> (str): Role associated with the registration key (e.g., 'admin', 'user').</li> <li><code>used</code> (bool): Indicates whether the registration key has been used.</li> </ul>"},{"location":"database_models/regkeys.html#example-usage","title":"Example Usage","text":"<p>```python</p>"},{"location":"database_models/regkeys.html#create-a-new-registration-key","title":"Create a new registration key","text":"<p>new_regkey = regkey(     hashed_key=\"hashed_key_123\",     role=\"admin\",     used=False ) db.session.add(new_regkey) db.session.commit()</p>"},{"location":"database_models/users.html","title":"User Model","text":"<p>Represents a user in the system.</p>"},{"location":"database_models/users.html#attributes","title":"Attributes","text":"<ul> <li><code>id</code> (int): Primary key, unique identifier for the user.</li> <li><code>username</code> (str): Unique username for the user (max 150 characters).</li> <li><code>password</code> (str): Hashed password for the user (max 255 characters).</li> <li><code>role</code> (str): Role of the user (e.g., 'admin', 'user').</li> </ul>"},{"location":"database_models/users.html#example-usage","title":"Example Usage","text":"<p>```python</p>"},{"location":"database_models/users.html#create-a-new-user","title":"Create a new user","text":"<p>new_user = User(username=\"john_doe\", password=\"hashed_password_123\", role=\"user\") db.session.add(new_user) db.session.commit()</p>"},{"location":"utilities/admin_keys.html","title":"Admin Keys","text":"<p>Generates and manages registration keys for admin and active users.</p>"},{"location":"utilities/admin_keys.html#routes","title":"Routes","text":"<ul> <li><code>/admin/generate_keys</code>: Generates new registration keys.</li> <li><code>/admin/view_keys</code>: Displays unused registration keys.</li> </ul>"},{"location":"utilities/admin_keys.html#example-key","title":"Example Key","text":"<p>```plaintext Generated Key: abc123def456ghi789 Hashed Key: hashed_key_123 Role: admin Used: False</p>"},{"location":"utilities/qr_codes.html","title":"QR Codes","text":"<p>Generates and validates QR codes for attendees.</p>"},{"location":"utilities/qr_codes.html#routes","title":"Routes","text":"<ul> <li><code>/attendee_form/&lt;event_id&gt;/&lt;attendee_id&gt;</code>: Generates a QR code.</li> <li><code>/validate_attendee/&lt;invite_code&gt;</code>: Validates a QR code.</li> </ul>"},{"location":"utilities/qr_codes.html#example-qr-code-data","title":"Example QR Code Data","text":"<p>```json {   \"validation_url\": \"http://example.com/validate_attendee/550e8400-e29b-41d4-a716-446655440000\",   \"timestamp\": \"2023-10-01T12:00:00\",   \"invite_code\": \"550e8400-e29b-41d4-a716-446655440000\",   \"attendee_name\": \"Jane Doe\" }</p>"},{"location":"utilities/server_health.html","title":"Server Health","text":"<p>Monitors server health and uptime.</p>"},{"location":"utilities/server_health.html#route","title":"Route","text":"<ul> <li><code>/api/health</code></li> </ul>"},{"location":"utilities/server_health.html#methods","title":"Methods","text":"<ul> <li><code>GET</code>: Returns server health metrics.</li> </ul>"},{"location":"utilities/server_health.html#example-response","title":"Example Response","text":"<p>```json {   \"cpu_usage\": 25.5,   \"memory_usage\": 60.2,   \"disk_usage\": 45.0,   \"network_sent\": 1024,   \"network_received\": 2048,   \"uptime\": \"2 days, 3:45:12\",   \"boot_time\": \"2023-09-28 08:00:00\" }</p>"}]}